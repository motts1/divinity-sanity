{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// [slug].js\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../client';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  const {\n    title = '',\n    name = 'Missing name',\n    categories,\n    authorImage,\n    body = []\n  } = props;\n  return __jsx(\"article\", null, __jsx(\"h1\", null, title), __jsx(\"span\", null, \"By \", name), categories && __jsx(\"ul\", null, \"Posted in\", categories.map(category => __jsx(\"li\", {\n    key: category\n  }, category))), authorImage && __jsx(\"div\", null, __jsx(\"img\", {\n    src: urlFor(authorImage).width(50).url()\n  })), __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config())));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  body\n}`;\n\nPost.getInitialProps = async function (context) {\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}